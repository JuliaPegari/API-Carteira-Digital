// <auto-generated />
using System;
using CarteiraDigitalAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarteiraDigitalAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarteiraDigitalAPI.Models.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Saldo")
                        .HasColumnType("numeric");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Carteiras");
                });

            modelBuilder.Entity("CarteiraDigitalAPI.Models.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarteiraDestinoId")
                        .HasColumnType("integer");

                    b.Property<int>("CarteiraOrigemId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraDestinoId");

                    b.HasIndex("CarteiraOrigemId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("CarteiraDigitalAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CarteiraDigitalAPI.Models.Carteira", b =>
                {
                    b.HasOne("CarteiraDigitalAPI.Models.Usuario", "Usuario")
                        .WithOne("Carteira")
                        .HasForeignKey("CarteiraDigitalAPI.Models.Carteira", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CarteiraDigitalAPI.Models.Transacao", b =>
                {
                    b.HasOne("CarteiraDigitalAPI.Models.Carteira", "CarteiraDestino")
                        .WithMany("TransferenciasRecebidas")
                        .HasForeignKey("CarteiraDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CarteiraDigitalAPI.Models.Carteira", "CarteiraOrigem")
                        .WithMany("TransferenciasEnviadas")
                        .HasForeignKey("CarteiraOrigemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CarteiraDestino");

                    b.Navigation("CarteiraOrigem");
                });

            modelBuilder.Entity("CarteiraDigitalAPI.Models.Carteira", b =>
                {
                    b.Navigation("TransferenciasEnviadas");

                    b.Navigation("TransferenciasRecebidas");
                });

            modelBuilder.Entity("CarteiraDigitalAPI.Models.Usuario", b =>
                {
                    b.Navigation("Carteira");
                });
#pragma warning restore 612, 618
        }
    }
}
